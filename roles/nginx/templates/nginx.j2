server_tokens off;

upstream app_server {
    server 127.0.0.1:{{ wsgi_server_port }} fail_timeout=0;
}

server {
    listen 443 ssl;
    server_name {{ app_hostname }} www.{{ app_hostname }} admin.{{ app_hostname }};

    # Deny invalid Host headers
    if ($host !~* ^({{ app_hostname }}|www.{{ app_hostname }}|admin.{{ app_hostname }})$) {
        return 444;
    }

    if ($request_method !~ ^(GET|POST|DELETE|HEAD)$) {
        return 405;
    }

    ssl_certificate {{ cert_path }};
    ssl_certificate_key {{ privatekey_path }};
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve secp521r1:secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 24h;
    ssl_session_tickets off;
    ssl_buffer_size 1400;

    keepalive_timeout 5;

    location /static {
        expires 1y;
        add_header Cache-Control public;

        # Set security headers on static files
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection mode=block;
        add_header X-Frame-Options SAMEORIGIN;

        alias {{ repository_path }}/_static/;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        proxy_pass http://app_server;
    }
}

server {
    listen 80;
    server_name {{ app_hostname }} www.{{ app_hostname }} admin.{{ app_hostname }} www.admin.{{ app_hostname }};

    if ($request_method !~ ^(GET|POST|DELETE|HEAD)$) {
        return 405;
    }

    return 301 https://$host$request_uri;
}
